/*
 * SONAR.c
 *
 *  Created on: May 7, 2023
 *      Author: Umaar
 */

#include "IfxPort.h"
#include "Bsp.h"
#include "STM_Interrupt.h"

#define ECHO         &MODULE_P14,0      /* Echo Pin P14_0 */
#define TRIG         &MODULE_P14,1      /* Trig Pin P14_1 */

#define PULSE_TIME   10                 /* 10us */
#define Speed_of_Sound 343              /* Speed of sound m/s */

void SEND_PULSE(void);

void SONAR_INIT(void){
    IfxPort_setPinModeOutput(TRIG, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
    IfxPort_setPinModeInput(ECHO, IfxPort_Mode_inputPullUp);
}

/* set the Trig pin high for at least 10 microseconds, and then set it low again. */
void SEND_PULSE(void){
    Ifx_TickTime pulse_ticks = IfxStm_getTicksFromMicroseconds(BSP_DEFAULT_TIMER, PULSE_TIME);
    IfxPort_setPinHigh(TRIG);   // Set Trig pin High
    waitTime(pulse_ticks);      // Wait for 10 microseconds
    IfxPort_setPinLow(TRIG);    // Set Trig pin low
}

/* Function to measure the distance to an object using the HC-SR04 */
int SONAR_MEASURE_DISTANCE(void){

    int distance;
    int elapsed_time;
    int timeout = 1000000;  // Timeout in microseconds

    // Send a pulse to the HC-SR04
    SEND_PULSE();

    // Wait for the Echo pin to go high
    while (!IfxPort_getPinState(ECHO) && timeout > 0) {
        timeout--;
    }

    // Start timer
    startTimer_STM0();

    // Wait for the Echo pin to go low
    while (IfxPort_getPinState(ECHO) && timeout > 0) {
        timeout--;
    }

    // Stop timer and calculate elapsed time
    stopTimer_STM0();
    elapsed_time = getTimeElapsed_in_us_STM0();

    // Calculate distance from elapsed time
    distance = (elapsed_time * Speed_of_Sound) / 20000;

    return distance;
}



